 package conejo.stanford.conejo;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.res.ColorStateList;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import me.crosswall.lib.coverflow.CoverFlow;
import me.crosswall.lib.coverflow.core.PagerContainer;

 public class SimilarItems extends AppCompatActivity {
    String price;
    String description;
    private MyPagerAdapter adapter;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_similar_items);

        //Get data from previous activity to load
        Intent intent = getIntent();
        String type = intent.getStringExtra("type");
        int id = intent.getIntExtra("id",R.mipmap.pants_1);
        loadUI(type, id);

        if(type.equals("Shoes")){
            initCarousels((PagerContainer) findViewById(R.id.item_container), DemoData.shoes, type);
        }else if(type.equals("Shirts")){
            initCarousels((PagerContainer) findViewById(R.id.item_container), DemoData.shirts, type);
        }else{
            initCarousels((PagerContainer) findViewById(R.id.item_container), DemoData.pants, type);
        }
    }

     @Override
    protected void onResume(){
        super.onResume();
        RelativeLayout rl = (RelativeLayout) findViewById(R.id.main_container);
        rl.setAlpha(1);
        View overlay  = findViewById(R.id.overlay);
        overlay.setVisibility(View.GONE);
    }

    private void loadUI(String type, int id){
        TextView description =  (TextView) findViewById(R.id.description);
        ImageView mainImg = (ImageView) findViewById(R.id.main_display);
        this.description = generateDescription(type);
        description.setText(this.description);
        mainImg.setImageResource(id);
    }

    /*
    * Autogenerated description style:
    * [accesoryType] from [brand]'s [Holiday Season] + [year] collection
    * \n\n
    * Your size: [random XS, S, M, L, XL, XXL]\n
    * Price: $[random Val]
    */

     private String generateDescription(String type){
         String description = type;
         price = DemoData.randPrice()+"";
         if(type.equals("Shoes")){
             description += " from " +
                     DemoData.randItem(DemoData.shoeBrands) + "'s " +
                     DemoData.randItem(DemoData.holidaySeason) + " " +
                     DemoData.randYear() + " collection"+
                     "\n\n"+
                     "Your Size: " + DemoData.randItem(DemoData.shoeSizes)+
                     "\n"+
                     "Price: $" + price;
         }else{
             description += " from " +
                     DemoData.randItem(DemoData.shirtPantBrands) + "'s " +
                     DemoData.randItem(DemoData.holidaySeason) + " " +
                     DemoData.randYear() + " collection"+
                     "\n\n"+
                     "Your Size: " + DemoData.randItem(DemoData.shirtPantSizes)+
                     "\n"+
                     "Price: $" + price;
         }

         return description;
     }

     private void initCarousels(PagerContainer container, int[] list, String type) {
         ViewPager pager = container.getViewPager();
         //Currently used as the method to get the adapters returns a bizzarre incomplete adapter

             adapter = new MyPagerAdapter(list,type);
             pager.setAdapter(adapter);

             pager.setClipChildren(false);
             pager.setOffscreenPageLimit(15);
             boolean showTransformer = getIntent().getBooleanExtra("showTransformer", true);
             if (showTransformer) {

                 new CoverFlow.Builder()
                         .with(pager)
                         .scale(0.15f)
                         .pagerMargin(getResources().getDimensionPixelSize(R.dimen.pager_margin))
                         .spaceSize(0f)
                         .build();

             } else {
                 pager.setPageMargin(30);
             }
     }

     //Carousel Adapter
     //Should reimplement using arrayAdapter to improve speed
     class MyPagerAdapter extends PagerAdapter {
         private int[] list;
         String type;

         MyPagerAdapter(int[] passed, String type){
             list = passed;
             this.type = type;
         }

         @Override
         public Object instantiateItem(ViewGroup container, int position) {

             View view = LayoutInflater.from(SimilarItems.this).inflate(R.layout.item_cover_buy,null);
             ImageView imageView = (ImageView) view.findViewById(R.id.image_cover);
             imageView.setImageDrawable(getResources().getDrawable(list[position]));
             imageView.setScaleType(ImageView.ScaleType.FIT_CENTER);
             Button buyBtn = (Button) view.findViewById(R.id.buyBtn);
             buyBtn.setText("$"+DemoData.randPrice());
             view.setTag(position);

             view.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
                    int position=(Integer)v.getTag();
                     (SimilarItems.this).startBuyCard(list[position], v, type );
                 }
             });

             container.addView(view);
             return view;
         }

         @Override
         public void destroyItem(ViewGroup container, int position, Object object) {
             container.removeView((View)object);
         }

         @Override
         public int getCount() {
             return list.length;
         }

         @Override
         public boolean isViewFromObject(View view, Object object) {
             return (view == object);
         }

         //Not the most desirable fix, essentially reloads the carousel, inneficient for large ones
         @Override
         public int getItemPosition(Object object){
             return POSITION_NONE;
         }
     }

     public void startBuyCard(int id, View v, String type){
         RelativeLayout rl = (RelativeLayout) findViewById(R.id.main_container);
         rl.setAlpha(0.3f);
         View overlay  = findViewById(R.id.overlay);
         overlay.setVisibility(View.VISIBLE);
         Intent intent = new Intent(getBaseContext(), BuyScreen.class);
         intent.putExtra("id", id);
         intent.putExtra("price", ((Button)v.findViewById(R.id.buyBtn)).getText().toString());
         intent.putExtra("type", type);
         startActivity(intent);
     }

     public void openProfile(View view) {
         Intent intent = new Intent(this, profileActivity.class);
         startActivity(intent);
     }

     public void buyDialog(View view) {
         AlertDialog.Builder dialog = new AlertDialog.Builder(SimilarItems.this);
         dialog.setCancelable(false);
         dialog.setTitle("Confirm your order");
         String message = "Are you sure you want to order ";
         if(description.contains("shirt")) message += " a ";
         else message+= "a pair of ";
         message+= (description.charAt(0)+"").toLowerCase() + description.substring(1, description.indexOf("collection") + "collection".length());
         message+= " for " + price + " again?";
         dialog.setMessage(message);

         dialog.setPositiveButton("Confirm Purchase", new DialogInterface.OnClickListener() {
             @Override
             public void onClick(DialogInterface dialog, int id) {
                 AlertDialog.Builder dialog2 = new AlertDialog.Builder(SimilarItems.this);
                 dialog2.setCancelable(true);
                 dialog2.setTitle("Order #1201432");
                 String message = "Your order has been confirmed, go to your orders tab under profile for more information";
                 dialog2.setMessage(message);
                 final AlertDialog alert2 = dialog2.create();
                 alert2.show();
             }
         })
                 .setNegativeButton("Cancel ", new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
                         //Action for "Cancel".
                     }
                 });

         final AlertDialog alert = dialog.create();
         alert.show();
     }

}
